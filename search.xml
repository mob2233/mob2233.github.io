<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>15-实现敌机和子弹的越界消失</title>
      <link href="/2023/03/05/15-%E5%AE%9E%E7%8E%B0%E6%95%8C%E6%9C%BA%E5%92%8C%E5%AD%90%E5%BC%B9%E7%9A%84%E8%B6%8A%E7%95%8C%E6%B6%88%E5%A4%B1/"/>
      <url>/2023/03/05/15-%E5%AE%9E%E7%8E%B0%E6%95%8C%E6%9C%BA%E5%92%8C%E5%AD%90%E5%BC%B9%E7%9A%84%E8%B6%8A%E7%95%8C%E6%B6%88%E5%A4%B1/</url>
      
        <content type="html"><![CDATA[<h3 id="我方子弹越界判断"><a href="#我方子弹越界判断" class="headerlink" title="我方子弹越界判断"></a>我方子弹越界判断</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">//ShellObj 类</span><br><span class="line">@Override</span><br><span class="line">public void paintSelf(Graphics gImage) &#123;</span><br><span class="line">super.paintSelf(gImage);</span><br><span class="line">y -= speed ;</span><br><span class="line">//我方子弹的判断</span><br><span class="line">if(y &lt;= 0)&#123;</span><br><span class="line">            //改变我方子弹的坐标</span><br><span class="line">this.x = -400 ;</span><br><span class="line">this.y = 400 ; </span><br><span class="line">GameUtils.removeList.add(this);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="敌机越界判断"><a href="#敌机越界判断" class="headerlink" title="敌机越界判断"></a>敌机越界判断</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">//EnemyObj类</span><br><span class="line">@Override</span><br><span class="line">public void paintSelf(Graphics gImage) &#123;</span><br><span class="line">super.paintSelf(gImage);</span><br><span class="line">//改变飞机y坐标</span><br><span class="line">y += speed ; </span><br><span class="line"></span><br><span class="line">//超出屏幕判断</span><br><span class="line">if(y &gt;= 600)&#123;</span><br><span class="line">            //改变坐标，防止留坑</span><br><span class="line">this.x = -500 ; </span><br><span class="line">this.y = 500 ; </span><br><span class="line">GameUtils.removeList.add(this);</span><br><span class="line">&#125;</span><br><span class="line">......</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="敌方boss子弹越界判断"><a href="#敌方boss子弹越界判断" class="headerlink" title="敌方boss子弹越界判断"></a>敌方boss子弹越界判断</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">//BulletObj类</span><br><span class="line">@Override</span><br><span class="line">public void paintSelf(Graphics gImage) &#123;</span><br><span class="line">super.paintSelf(gImage);</span><br><span class="line">y += speed ; </span><br><span class="line">//超出屏幕判断</span><br><span class="line">if(y &gt;= 600)&#123;</span><br><span class="line">            //改变坐标，防止留坑</span><br><span class="line">this.x = -500 ; </span><br><span class="line">this.y = 500 ; </span><br><span class="line">GameUtils.removeList.add(this);</span><br><span class="line">&#125;</span><br><span class="line">......</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 飞机大战 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 飞机大战 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>14-实现暂停功能</title>
      <link href="/2023/03/05/14-%E5%AE%9E%E7%8E%B0%E6%9A%82%E5%81%9C%E5%8A%9F%E8%83%BD/"/>
      <url>/2023/03/05/14-%E5%AE%9E%E7%8E%B0%E6%9A%82%E5%81%9C%E5%8A%9F%E8%83%BD/</url>
      
        <content type="html"><![CDATA[<h3 id="在主窗口中，添加键盘监听事件"><a href="#在主窗口中，添加键盘监听事件" class="headerlink" title="在主窗口中，添加键盘监听事件"></a>在主窗口中，添加键盘监听事件</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">//GameWin类</span><br><span class="line">//实现暂停功能  添加键盘监听事件 </span><br><span class="line">this.addKeyListener(new KeyAdapter() &#123;</span><br><span class="line">@Override</span><br><span class="line">public void keyPressed(KeyEvent e) &#123;</span><br><span class="line">if(e.getKeyCode() == 32)&#123;</span><br><span class="line">//游戏运行时暂停，暂停时运行  空格键对应的ASCII码是32</span><br><span class="line">switch (state) &#123;</span><br><span class="line">case 1:</span><br><span class="line">state = 2 ;</span><br><span class="line">break;</span><br><span class="line">case 2:</span><br><span class="line">state = 1 ; </span><br><span class="line">break; </span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 飞机大战 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 飞机大战 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>13-敌方boss添加生命值</title>
      <link href="/2023/03/05/13-%E6%95%8C%E6%96%B9boss%E6%B7%BB%E5%8A%A0%E7%94%9F%E5%91%BD%E5%80%BC/"/>
      <url>/2023/03/05/13-%E6%95%8C%E6%96%B9boss%E6%B7%BB%E5%8A%A0%E7%94%9F%E5%91%BD%E5%80%BC/</url>
      
        <content type="html"><![CDATA[<h3 id="在敌方boss类中添加一个变量保存生命值"><a href="#在敌方boss类中添加一个变量保存生命值" class="headerlink" title="在敌方boss类中添加一个变量保存生命值"></a>在敌方boss类中添加一个变量保存生命值</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">//BossObj</span><br><span class="line">int life = 100 ;</span><br></pre></td></tr></table></figure><h3 id="在敌方boss类的绘制自身paintSelf-方法中，与我方战机子弹碰撞检测"><a href="#在敌方boss类的绘制自身paintSelf-方法中，与我方战机子弹碰撞检测" class="headerlink" title="在敌方boss类的绘制自身paintSelf()方法中，与我方战机子弹碰撞检测"></a>在敌方boss类的绘制自身paintSelf()方法中，与我方战机子弹碰撞检测</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">//BossObj</span><br><span class="line">@Override</span><br><span class="line">public void paintSelf(Graphics gImage) &#123;</span><br><span class="line">......</span><br><span class="line">//添加boss与我方子弹碰撞的检测代码</span><br><span class="line">for(ShellObj shellObj : GameUtils.shellObjList)&#123;</span><br><span class="line">if(shellObj.getRec().intersects(this.getRec()))&#123;</span><br><span class="line"></span><br><span class="line">//碰撞后的子弹删除，防止重复检测 。 </span><br><span class="line">//改变子弹的位置 </span><br><span class="line">shellObj.setX(-300);</span><br><span class="line">shellObj.setY(300);</span><br><span class="line">//添加到删除集合中 </span><br><span class="line">GameUtils.removeList.add(shellObj);</span><br><span class="line">                //生命值减少</span><br><span class="line">life-- ; </span><br><span class="line">if(life &lt;=0)&#123;</span><br><span class="line">//游戏通关</span><br><span class="line">GameWin.state = 4; </span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="主窗口中显示通关成功界面"><a href="#主窗口中显示通关成功界面" class="headerlink" title="主窗口中显示通关成功界面"></a>主窗口中显示通关成功界面</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">//GameWin类 </span><br><span class="line">//通关成功界面</span><br><span class="line">if(state == 4)&#123;</span><br><span class="line">gImage.drawImage(GameUtils.explodeImg, bossObj.x + 30, bossObj.getY(), null);</span><br><span class="line">// 添加文字  调用工具类代码</span><br><span class="line">GameUtils.drawWord(gImage, &quot;游 戏 通 关&quot;, Color.green, 40, 200, 300);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="敌方boss添加血条，查看boss的生命情况"><a href="#敌方boss添加血条，查看boss的生命情况" class="headerlink" title="敌方boss添加血条，查看boss的生命情况"></a>敌方boss添加血条，查看boss的生命情况</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">//BossObj</span><br><span class="line">//绘制自身的方法中</span><br><span class="line">@Override</span><br><span class="line">public void paintSelf(Graphics gImage) &#123;</span><br><span class="line">......</span><br><span class="line"></span><br><span class="line">//血条的白色背景</span><br><span class="line">gImage.setColor(Color.white);</span><br><span class="line">gImage.fillRect(20, 40, 100, 10);</span><br><span class="line">//血条的绘制</span><br><span class="line">gImage.setColor(Color.red);</span><br><span class="line">gImage.fillRect(20, 40, life*100/10, 10);</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 飞机大战 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 飞机大战 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>16-实现敌机爆炸效果</title>
      <link href="/2023/03/05/16-%E5%AE%9E%E7%8E%B0%E6%95%8C%E6%9C%BA%E7%88%86%E7%82%B8%E6%95%88%E6%9E%9C/"/>
      <url>/2023/03/05/16-%E5%AE%9E%E7%8E%B0%E6%95%8C%E6%9C%BA%E7%88%86%E7%82%B8%E6%95%88%E6%9E%9C/</url>
      
        <content type="html"><![CDATA[<h3 id="新建爆炸ExplodeObj类，继承GameObj类"><a href="#新建爆炸ExplodeObj类，继承GameObj类" class="headerlink" title="新建爆炸ExplodeObj类，继承GameObj类"></a>新建爆炸ExplodeObj类，继承GameObj类</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">package com.demo.fly;</span><br><span class="line"></span><br><span class="line">import java.awt.Graphics;</span><br><span class="line">import java.awt.Image;</span><br><span class="line">import java.awt.Toolkit;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * 爆炸类</span><br><span class="line"> * 爆炸动画实际上是由一系列静态图快速切换而产生的视觉效果，又因为每一架敌机的爆炸效果图都一样</span><br><span class="line"> * 所以我们需要顶一个Image 类型的静态数组</span><br><span class="line"> * @author Administrator</span><br><span class="line"> *</span><br><span class="line"> */</span><br><span class="line">public class ExplodeObj extends GameObj&#123;</span><br><span class="line"></span><br><span class="line">//爆炸图一共16张</span><br><span class="line">static Image[] pic = new Image[16];</span><br><span class="line"></span><br><span class="line">//静态代码块，将当前的图片添加到静态数组中</span><br><span class="line">static&#123;</span><br><span class="line">for (int i = 0; i &lt; pic.length; i++) &#123;</span><br><span class="line">pic[i] = Toolkit.getDefaultToolkit().getImage(&quot;imgs/explode/e&quot; + (i+1)+&quot;.gif&quot;);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public ExplodeObj(int x, int y) &#123;</span><br><span class="line">super(x, y);</span><br><span class="line">// TODO Auto-generated constructor stub</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">@Override</span><br><span class="line">public void paintSelf(Graphics gImage) &#123;</span><br><span class="line">super.paintSelf(gImage);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="对于每一架敌机来说爆炸效果图，只能出现一次，所以我们需要定义一个变量-，让图片只显示一次"><a href="#对于每一架敌机来说爆炸效果图，只能出现一次，所以我们需要定义一个变量-，让图片只显示一次" class="headerlink" title="对于每一架敌机来说爆炸效果图，只能出现一次，所以我们需要定义一个变量 ，让图片只显示一次"></a>对于每一架敌机来说爆炸效果图，只能出现一次，所以我们需要定义一个变量 ，让图片只显示一次</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">//ExplodeObj</span><br><span class="line">int explodeCount = 0 ; </span><br><span class="line"></span><br><span class="line">//重写paintSelf()方法</span><br><span class="line">@Override</span><br><span class="line">public void paintSelf(Graphics gImage) &#123;</span><br><span class="line">//数组长度对比</span><br><span class="line">if(explodeCount &lt; 16)&#123;</span><br><span class="line">img = pic[explodeCount];</span><br><span class="line">super.paintSelf(gImage);</span><br><span class="line">explodeCount++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="由于每一次爆炸都需要创建一个爆炸类的对象，所以需要在工具类中添加一个爆炸类的集合"><a href="#由于每一次爆炸都需要创建一个爆炸类的对象，所以需要在工具类中添加一个爆炸类的集合" class="headerlink" title="由于每一次爆炸都需要创建一个爆炸类的对象，所以需要在工具类中添加一个爆炸类的集合"></a>由于每一次爆炸都需要创建一个爆炸类的对象，所以需要在工具类中添加一个爆炸类的集合</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">//GameUtils</span><br><span class="line">//爆炸类集合对象</span><br><span class="line">public static List&lt;ExplodeObj&gt; explodeObjList = new ArrayList&lt;&gt;();</span><br></pre></td></tr></table></figure><h3 id="爆炸效果图在敌机被击中时添加，所以我们找到我方子弹和敌方飞机碰撞的方法"><a href="#爆炸效果图在敌机被击中时添加，所以我们找到我方子弹和敌方飞机碰撞的方法" class="headerlink" title="爆炸效果图在敌机被击中时添加，所以我们找到我方子弹和敌方飞机碰撞的方法"></a>爆炸效果图在敌机被击中时添加，所以我们找到我方子弹和敌方飞机碰撞的方法</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">//EnemyObj类</span><br><span class="line">@Override</span><br><span class="line">public void paintSelf(Graphics gImage) &#123;</span><br><span class="line">......</span><br><span class="line">//便利我方子弹集合  和敌方飞机进行碰撞检测</span><br><span class="line">for(ShellObj shellObj : GameUtils.shellObjList)&#123;</span><br><span class="line">if(shellObj.getRec().intersects(this.getRec()))&#123;</span><br><span class="line">//敌机被我方子弹击中后，创建爆炸类，爆炸效果度的位置为当前被击中飞机的位置</span><br><span class="line">ExplodeObj explodeObj = new ExplodeObj(x, y);</span><br><span class="line">//添加到爆炸集合中</span><br><span class="line">GameUtils.explodeObjList.add(explodeObj);</span><br><span class="line">......</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="回到窗口类的paint-方法中，在state-x3D-1-的代码快中，我们将explodeObjList，添加到gameObjList中，同时为了防止gameObjList集合长度过大，我们还需要将爆炸对象放到removeList中"><a href="#回到窗口类的paint-方法中，在state-x3D-1-的代码快中，我们将explodeObjList，添加到gameObjList中，同时为了防止gameObjList集合长度过大，我们还需要将爆炸对象放到removeList中" class="headerlink" title="回到窗口类的paint()方法中，在state &#x3D; 1 的代码快中，我们将explodeObjList，添加到gameObjList中，同时为了防止gameObjList集合长度过大，我们还需要将爆炸对象放到removeList中"></a>回到窗口类的paint()方法中，在state &#x3D; 1 的代码快中，我们将explodeObjList，添加到gameObjList中，同时为了防止gameObjList集合长度过大，我们还需要将爆炸对象放到removeList中</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">//GameWin类</span><br><span class="line">// 游戏开始</span><br><span class="line">if (state == 1) &#123;</span><br><span class="line">//添加爆炸集合到所有物体集合中，在便利之前添加</span><br><span class="line">GameUtils.gameObjList.addAll(GameUtils.explodeObjList);</span><br><span class="line">......</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="将爆炸集合添加到需要删除的对象中去-。"><a href="#将爆炸集合添加到需要删除的对象中去-。" class="headerlink" title="将爆炸集合添加到需要删除的对象中去 。"></a>将爆炸集合添加到需要删除的对象中去 。</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">//EnemyObj</span><br><span class="line">//便利我方子弹集合  和敌方飞机进行碰撞检测</span><br><span class="line">for(ShellObj shellObj : GameUtils.shellObjList)&#123;</span><br><span class="line">if(shellObj.getRec().intersects(this.getRec()))&#123;</span><br><span class="line">//敌机被我方子弹击中后，创建爆炸类，爆炸效果度的位置为当前被击中飞机的位置</span><br><span class="line">ExplodeObj explodeObj = new ExplodeObj(x, y);</span><br><span class="line">//添加到爆炸集合中</span><br><span class="line">GameUtils.explodeObjList.add(explodeObj);</span><br><span class="line">......</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 飞机大战 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 飞机大战 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>12-计分面板编写</title>
      <link href="/2023/03/05/12-%E8%AE%A1%E5%88%86%E9%9D%A2%E6%9D%BF%E7%BC%96%E5%86%99/"/>
      <url>/2023/03/05/12-%E8%AE%A1%E5%88%86%E9%9D%A2%E6%9D%BF%E7%BC%96%E5%86%99/</url>
      
        <content type="html"><![CDATA[<h3 id="每击中一架敌机后，分数需要-1-，GameWin类中定义计分变量"><a href="#每击中一架敌机后，分数需要-1-，GameWin类中定义计分变量" class="headerlink" title="每击中一架敌机后，分数需要 +1 ，GameWin类中定义计分变量"></a>每击中一架敌机后，分数需要 +1 ，GameWin类中定义计分变量</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">//GameWin类</span><br><span class="line">//声明一个静态的变量score，用来保存分数 </span><br><span class="line">public static int score = 0 ; </span><br></pre></td></tr></table></figure><h3 id="工具类GameUtils中定义绘制文字的方法"><a href="#工具类GameUtils中定义绘制文字的方法" class="headerlink" title="工具类GameUtils中定义绘制文字的方法"></a>工具类GameUtils中定义绘制文字的方法</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">//GameUtils类</span><br><span class="line">/**</span><br><span class="line"> * 定义绘制文字的公共方法 。 </span><br><span class="line"> * @param gImage 画笔对象</span><br><span class="line"> * @param str    写入字符串</span><br><span class="line"> * @param color  颜色</span><br><span class="line"> * @param size   大小</span><br><span class="line"> * @param x      坐标</span><br><span class="line"> * @param y</span><br><span class="line"> */</span><br><span class="line">public static void drawWord(Graphics gImage , String str ,Color color , int size , int x, int y )&#123;</span><br><span class="line">gImage.setColor(color);</span><br><span class="line">gImage.setFont(new Font(&quot;仿宋&quot;, Font.BOLD, size));</span><br><span class="line">gImage.drawString(str, x, y);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="更新绘制文字的公共方法"><a href="#更新绘制文字的公共方法" class="headerlink" title="更新绘制文字的公共方法"></a>更新绘制文字的公共方法</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">//GameWin类</span><br><span class="line">// 游戏未开始</span><br><span class="line">if (state == 0) &#123;</span><br><span class="line">// 使用画笔绘制图片</span><br><span class="line">gImage.drawImage(GameUtils.bgImg, 0, 0, null);</span><br><span class="line">gImage.drawImage(GameUtils.bossImg, 220, 120, null);</span><br><span class="line">gImage.drawImage(GameUtils.explodeImg, 270, 350, null);</span><br><span class="line">// 添加文字  替换工具类中的方法 。 </span><br><span class="line">GameUtils.drawWord(gImage, &quot;点击开始游戏&quot;, Color.yellow, 40, 180, 300);</span><br><span class="line">&#125;</span><br><span class="line">......</span><br><span class="line">    if (state == 3) &#123;</span><br><span class="line">// 游戏失败</span><br><span class="line">// 添加文字  调用工具类代码</span><br><span class="line">GameUtils.drawWord(gImage, &quot;GAME OVER&quot;, Color.red, 40, 200, 300);</span><br><span class="line">//添加爆炸图 </span><br><span class="line">gImage.drawImage(GameUtils.explodeImg, planeObj.x -20, planeObj.y -10, null);</span><br><span class="line">&#125;</span><br><span class="line">//绘制计分面板到窗口上</span><br><span class="line">GameUtils.drawWord(gImage, score + &quot; 分&quot;, Color.green, 40, 30, 100);</span><br><span class="line">// 把新图片一次绘制到主窗口中</span><br><span class="line">g.drawImage(offScreenImage, 0, 0, null);</span><br><span class="line">// 绘制次数 +1</span><br><span class="line">count++;</span><br></pre></td></tr></table></figure><h3 id="在我方子弹与敌机的碰撞检测类中，进行计分的增加"><a href="#在我方子弹与敌机的碰撞检测类中，进行计分的增加" class="headerlink" title="在我方子弹与敌机的碰撞检测类中，进行计分的增加"></a>在我方子弹与敌机的碰撞检测类中，进行计分的增加</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">//EnemyObj</span><br><span class="line">@Override</span><br><span class="line">public void paintSelf(Graphics gImage) &#123;</span><br><span class="line">......</span><br><span class="line">//添加分数</span><br><span class="line">GameWin.score++;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 飞机大战 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 飞机大战 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>11-我方飞机与敌方碰撞检测</title>
      <link href="/2023/03/05/11-%E6%88%91%E6%96%B9%E9%A3%9E%E6%9C%BA%E4%B8%8E%E6%95%8C%E6%96%B9%E7%A2%B0%E6%92%9E%E6%A3%80%E6%B5%8B/"/>
      <url>/2023/03/05/11-%E6%88%91%E6%96%B9%E9%A3%9E%E6%9C%BA%E4%B8%8E%E6%95%8C%E6%96%B9%E7%A2%B0%E6%92%9E%E6%A3%80%E6%B5%8B/</url>
      
        <content type="html"><![CDATA[<h3 id="与敌方子弹进行碰撞检测"><a href="#与敌方子弹进行碰撞检测" class="headerlink" title="与敌方子弹进行碰撞检测"></a>与敌方子弹进行碰撞检测</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">//BulletObj类</span><br><span class="line"></span><br><span class="line">@Override</span><br><span class="line">public void paintSelf(Graphics gImage) &#123;</span><br><span class="line">super.paintSelf(gImage);</span><br><span class="line">y += speed ; </span><br><span class="line">//我方飞机与敌方子弹的碰撞检测  游戏结束</span><br><span class="line">if(this.getRec().intersects(this.frame.planeObj.getRec()))&#123;</span><br><span class="line">//游戏结束 </span><br><span class="line">this.frame.state = 3 ;</span><br><span class="line">//将当前子弹添加到需要删除的集合中去。 </span><br><span class="line">GameUtils.removeList.add(this);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="与敌方boss碰撞检测"><a href="#与敌方boss碰撞检测" class="headerlink" title="与敌方boss碰撞检测"></a>与敌方boss碰撞检测</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">//BossObj</span><br><span class="line">@Override</span><br><span class="line">public void paintSelf(Graphics gImage) &#123;</span><br><span class="line">super.paintSelf(gImage);</span><br><span class="line">//boss移动</span><br><span class="line">x += speed ; </span><br><span class="line">if(x &gt; this.frame.width -100 || x &lt; -50)&#123;</span><br><span class="line">speed = -speed ; </span><br><span class="line">&#125;</span><br><span class="line">//与地方boss碰撞检测</span><br><span class="line">if(this.getRec().intersects(this.frame.planeObj.getRec()))&#123;</span><br><span class="line">this.frame.state = 3 ; </span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 飞机大战 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 飞机大战 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>10-在窗体上添加敌方boss</title>
      <link href="/2023/03/05/10-%E5%9C%A8%E7%AA%97%E4%BD%93%E4%B8%8A%E6%B7%BB%E5%8A%A0%E6%95%8C%E6%96%B9boss/"/>
      <url>/2023/03/05/10-%E5%9C%A8%E7%AA%97%E4%BD%93%E4%B8%8A%E6%B7%BB%E5%8A%A0%E6%95%8C%E6%96%B9boss/</url>
      
        <content type="html"><![CDATA[<h3 id="创建敌方boss类-重写需要的方法"><a href="#创建敌方boss类-重写需要的方法" class="headerlink" title="创建敌方boss类,重写需要的方法"></a>创建敌方boss类,重写需要的方法</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">package com.demo.fly;</span><br><span class="line"></span><br><span class="line">import java.awt.Graphics;</span><br><span class="line">import java.awt.Image;</span><br><span class="line">import java.awt.Rectangle;</span><br><span class="line"></span><br><span class="line">public class BossObj extends GameObj &#123;</span><br><span class="line"></span><br><span class="line">public BossObj() &#123;</span><br><span class="line">super();</span><br><span class="line">// TODO Auto-generated constructor stub</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public BossObj(Image img, int x, int y, int width, int height, double speed, GameWin frame) &#123;</span><br><span class="line">super(img, x, y, width, height, speed, frame);</span><br><span class="line">// TODO Auto-generated constructor stub</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">@Override</span><br><span class="line">public void paintSelf(Graphics gImage) &#123;</span><br><span class="line">super.paintSelf(gImage);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">@Override</span><br><span class="line">public Rectangle getRec() &#123;</span><br><span class="line">// TODO Auto-generated method stub</span><br><span class="line">return super.getRec();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="在主窗体GameWin类上实例化boss对象，并且添加到所有物体集合中去"><a href="#在主窗体GameWin类上实例化boss对象，并且添加到所有物体集合中去" class="headerlink" title="在主窗体GameWin类上实例化boss对象，并且添加到所有物体集合中去"></a>在主窗体GameWin类上实例化boss对象，并且添加到所有物体集合中去</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">//GameWin类</span><br><span class="line"></span><br><span class="line">//创建Boss对象 </span><br><span class="line">BossObj bossObj = new BossObj(GameUtils.bossImg, 260, 60, 220, 120, 3, this);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">//launch()方法中添加bossObj</span><br><span class="line">GameUtils.gameObjList.add(bgObj);</span><br><span class="line">GameUtils.gameObjList.add(planeObj);</span><br><span class="line">GameUtils.gameObjList.add(bossObj);</span><br></pre></td></tr></table></figure><h3 id="实现boss移动的功能，boss可以左右移动"><a href="#实现boss移动的功能，boss可以左右移动" class="headerlink" title="实现boss移动的功能，boss可以左右移动"></a>实现boss移动的功能，boss可以左右移动</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">//BossObj类</span><br><span class="line">//左右移动，改变的是横坐标的值，加上边界判断</span><br><span class="line">@Override</span><br><span class="line">public void paintSelf(Graphics gImage) &#123;</span><br><span class="line">super.paintSelf(gImage);</span><br><span class="line">//boss移动</span><br><span class="line">x += speed ; </span><br><span class="line">if(x &gt; this.frame.width -100 || x &lt; 0)&#123;</span><br><span class="line">speed = -speed ; </span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="boss添加子弹"><a href="#boss添加子弹" class="headerlink" title="boss添加子弹"></a>boss添加子弹</h2><h3 id="定义一个子弹类BulletObj-集成GameObj"><a href="#定义一个子弹类BulletObj-集成GameObj" class="headerlink" title="定义一个子弹类BulletObj 集成GameObj"></a>定义一个子弹类BulletObj 集成GameObj</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">package com.demo.fly;</span><br><span class="line"></span><br><span class="line">import java.awt.Graphics;</span><br><span class="line">import java.awt.Image;</span><br><span class="line">import java.awt.Rectangle;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * 敌机子弹类</span><br><span class="line"> * @author Administrator</span><br><span class="line"> */</span><br><span class="line">public class BulletObj extends GameObj &#123;</span><br><span class="line"></span><br><span class="line">public BulletObj() &#123;</span><br><span class="line">super();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public BulletObj(Image img, int x, int y, int width, int height, double speed, GameWin frame) &#123;</span><br><span class="line">super(img, x, y, width, height, speed, frame);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">@Override</span><br><span class="line">public void paintSelf(Graphics gImage) &#123;</span><br><span class="line">super.paintSelf(gImage);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">@Override</span><br><span class="line">public Rectangle getRec() &#123;</span><br><span class="line">return super.getRec();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="在工具类GameUtils中，定义一个boss子弹图片，还有boss子弹的集合。"><a href="#在工具类GameUtils中，定义一个boss子弹图片，还有boss子弹的集合。" class="headerlink" title="在工具类GameUtils中，定义一个boss子弹图片，还有boss子弹的集合。"></a>在工具类GameUtils中，定义一个boss子弹图片，还有boss子弹的集合。</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">//GameUtils</span><br><span class="line">//敌方子弹图片</span><br><span class="line">public static Image bulletImg = Toolkit.getDefaultToolkit().getImage(&quot;imgs/bullet.png&quot;);</span><br><span class="line"></span><br><span class="line">//定义boss子弹的集合 。 </span><br><span class="line">public static List&lt;BulletObj&gt; bulletObjList = new ArrayList&lt;&gt;();</span><br></pre></td></tr></table></figure><h3 id="在窗体上显示boss子弹"><a href="#在窗体上显示boss子弹" class="headerlink" title="在窗体上显示boss子弹"></a>在窗体上显示boss子弹</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">//GameWin类 </span><br><span class="line">//生成boss子弹    每重绘二十次，生成一颗子弹</span><br><span class="line">if(count % 20 == 0)&#123;</span><br><span class="line">GameUtils.bulletObjList.add(new BulletObj(GameUtils.bulletImg, bossObj.x + bossObj.width/2, bossObj.y + 100, 14, 25, 2.5, this));</span><br><span class="line">GameUtils.gameObjList.add(GameUtils.bulletObjList.get(GameUtils.bulletObjList.size()-1));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="实现子弹的移动功能"><a href="#实现子弹的移动功能" class="headerlink" title="实现子弹的移动功能"></a>实现子弹的移动功能</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">//BulletObj类</span><br><span class="line">//子弹向下移动  y主键增大</span><br><span class="line">@Override</span><br><span class="line">public void paintSelf(Graphics gImage) &#123;</span><br><span class="line">super.paintSelf(gImage);</span><br><span class="line">y += speed ; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="boss不能立马出现，当地方飞机出现100架之后，才可以出现，调整之前的代码"><a href="#boss不能立马出现，当地方飞机出现100架之后，才可以出现，调整之前的代码" class="headerlink" title="boss不能立马出现，当地方飞机出现100架之后，才可以出现，调整之前的代码"></a>boss不能立马出现，当地方飞机出现100架之后，才可以出现，调整之前的代码</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">//GameWin 类</span><br><span class="line"></span><br><span class="line">//声明一个变量，保存生成敌机的数量</span><br><span class="line">int enemyCount = 0 ; </span><br><span class="line"></span><br><span class="line">//初始化BossObj 为 null</span><br><span class="line">BossObj bossObj = null; </span><br><span class="line"></span><br><span class="line">//在生成敌机的时候，加上一个数字统计</span><br><span class="line">// 生成敌机</span><br><span class="line">if (count % 10 == 0) &#123;</span><br><span class="line">GameUtils.enemyObjList.add(new EnemyObj(GameUtils.enemyImg, (int) (Math.random() * 12) * 50,</span><br><span class="line">(int) (Math.random() * 100), 49, 36, 3, this));</span><br><span class="line">// 添加到所有物体集合中</span><br><span class="line">GameUtils.gameObjList.add(GameUtils.enemyObjList.get(GameUtils.enemyObjList.size() - 1));</span><br><span class="line">enemyCount ++ ; //敌机数量加1 </span><br><span class="line">&#125;</span><br><span class="line">//生成boss子弹  加上判断  bossObj 不能为空</span><br><span class="line">if(count % 20 == 0 &amp;&amp; bossObj != null)&#123;</span><br><span class="line">GameUtils.bulletObjList.add(new BulletObj(GameUtils.bulletImg, bossObj.x + bossObj.width/2, bossObj.y + 100, 14, 25, 2.5, this));</span><br><span class="line">GameUtils.gameObjList.add(GameUtils.bulletObjList.get(GameUtils.bulletObjList.size()-1));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">//生成boss，敌机超过100架 并且 bossObj为空的情况下才能创建</span><br><span class="line">if(enemyCount &gt; 10 &amp;&amp; bossObj == null)&#123;</span><br><span class="line">bossObj = new BossObj(GameUtils.bossImg, 260, 60, 220, 120, 3, this);</span><br><span class="line">GameUtils.gameObjList.add(bossObj);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 飞机大战 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 飞机大战 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>09-实现碰撞检测功能</title>
      <link href="/2023/03/05/09-%E5%AE%9E%E7%8E%B0%E7%A2%B0%E6%92%9E%E6%A3%80%E6%B5%8B%E5%8A%9F%E8%83%BD/"/>
      <url>/2023/03/05/09-%E5%AE%9E%E7%8E%B0%E7%A2%B0%E6%92%9E%E6%A3%80%E6%B5%8B%E5%8A%9F%E8%83%BD/</url>
      
        <content type="html"><![CDATA[<h3 id="我方子弹和地方飞机的碰撞检测"><a href="#我方子弹和地方飞机的碰撞检测" class="headerlink" title="我方子弹和地方飞机的碰撞检测"></a>我方子弹和地方飞机的碰撞检测</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">//碰撞检查，检查矩形中，有没有重叠的地方</span><br><span class="line">//我方子弹与地方飞机，进行一一碰撞检测 。 </span><br></pre></td></tr></table></figure><h3 id="在GameUtils工具类中，定义需要删除的对象集合"><a href="#在GameUtils工具类中，定义需要删除的对象集合" class="headerlink" title="在GameUtils工具类中，定义需要删除的对象集合"></a>在GameUtils工具类中，定义需要删除的对象集合</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">//GameUtils</span><br><span class="line">//要删除元素的集合 。 </span><br><span class="line">public static List&lt;GameObj&gt; removeList = new ArrayList&lt;&gt;();</span><br></pre></td></tr></table></figure><h3 id="在Enemy类的paintSelf方法中，进行碰撞检测"><a href="#在Enemy类的paintSelf方法中，进行碰撞检测" class="headerlink" title="在Enemy类的paintSelf方法中，进行碰撞检测"></a>在Enemy类的paintSelf方法中，进行碰撞检测</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">@Override</span><br><span class="line">public void paintSelf(Graphics gImage) &#123;</span><br><span class="line">super.paintSelf(gImage);</span><br><span class="line">//改变飞机y坐标</span><br><span class="line">y += speed ; </span><br><span class="line">//便利我方子弹集合</span><br><span class="line">for(ShellObj shellObj : GameUtils.shellObjList)&#123;</span><br><span class="line">if(shellObj.getRec().intersects(this.getRec()))&#123;</span><br><span class="line">//发生了碰撞  双方都消失  改变坐标</span><br><span class="line">this.x = -100 ;</span><br><span class="line">this.y = 100  ; </span><br><span class="line">shellObj.setX(-200);</span><br><span class="line">shellObj.setY(200);</span><br><span class="line">//添加到需要删除的集合中 </span><br><span class="line">GameUtils.removeList.add(this);</span><br><span class="line">GameUtils.removeList.add(shellObj);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="在GameWin主窗口中，将需要删除的元素进行删除"><a href="#在GameWin主窗口中，将需要删除的元素进行删除" class="headerlink" title="在GameWin主窗口中，将需要删除的元素进行删除"></a>在GameWin主窗口中，将需要删除的元素进行删除</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">//GameWin类</span><br><span class="line">// 游戏开始</span><br><span class="line">if (state == 1) &#123;</span><br><span class="line">for (int i = 0; i &lt; GameUtils.gameObjList.size(); i++) &#123;</span><br><span class="line">GameUtils.gameObjList.get(i).paintSelf(gImage);</span><br><span class="line">&#125;</span><br><span class="line">//在下一次绘制之前，将需要删除的元素进行删除</span><br><span class="line">GameUtils.gameObjList.removeAll(GameUtils.removeList);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="我方飞机与地方飞机的碰撞检测"><a href="#我方飞机与地方飞机的碰撞检测" class="headerlink" title="我方飞机与地方飞机的碰撞检测"></a>我方飞机与地方飞机的碰撞检测</h2><h3 id="在PlaneObj类的paintSelf-方法中，实现碰撞检测功能"><a href="#在PlaneObj类的paintSelf-方法中，实现碰撞检测功能" class="headerlink" title="在PlaneObj类的paintSelf() 方法中，实现碰撞检测功能"></a>在PlaneObj类的paintSelf() 方法中，实现碰撞检测功能</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">//PlaneObj类</span><br><span class="line">@Override</span><br><span class="line">public void paintSelf(Graphics gImage) &#123;</span><br><span class="line">// TODO Auto-generated method stub</span><br><span class="line">super.paintSelf(gImage);</span><br><span class="line">//我方飞机与地方飞机的碰撞检测</span><br><span class="line">for(EnemyObj enemyObj : GameUtils.enemyObjList)&#123;</span><br><span class="line">if(enemyObj.getRec().intersects(this.getRec()))&#123;</span><br><span class="line">//设定游戏状态 游戏失败，</span><br><span class="line">this.frame.state = 3; </span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="在主窗口中，绘制游戏失败的界面提示“Game-Over”"><a href="#在主窗口中，绘制游戏失败的界面提示“Game-Over”" class="headerlink" title="在主窗口中，绘制游戏失败的界面提示“Game Over”"></a>在主窗口中，绘制游戏失败的界面提示“Game Over”</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">//GameWin类</span><br><span class="line">if (state == 3) &#123;</span><br><span class="line">// 游戏失败</span><br><span class="line">// 添加文字</span><br><span class="line">gImage.setColor(Color.red);</span><br><span class="line">gImage.setFont(new Font(&quot;仿宋&quot;, Font.BOLD, 40));</span><br><span class="line">gImage.drawString(&quot;GAME OVER&quot;, 200, 300);</span><br><span class="line">        //添加爆炸图 </span><br><span class="line">gImage.drawImage(GameUtils.explodeImg, planeObj.x -20, planeObj.y -10, null);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 飞机大战 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 飞机大战 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>08-实现敌方飞机的添加</title>
      <link href="/2023/03/05/08-%E5%AE%9E%E7%8E%B0%E6%95%8C%E6%96%B9%E9%A3%9E%E6%9C%BA%E7%9A%84%E6%B7%BB%E5%8A%A0/"/>
      <url>/2023/03/05/08-%E5%AE%9E%E7%8E%B0%E6%95%8C%E6%96%B9%E9%A3%9E%E6%9C%BA%E7%9A%84%E6%B7%BB%E5%8A%A0/</url>
      
        <content type="html"><![CDATA[<h3 id="创建敌方分级类-EnemyObj类，继承GameObj，重写父类中的方法"><a href="#创建敌方分级类-EnemyObj类，继承GameObj，重写父类中的方法" class="headerlink" title="创建敌方分级类 EnemyObj类，继承GameObj，重写父类中的方法"></a>创建敌方分级类 EnemyObj类，继承GameObj，重写父类中的方法</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">package com.demo.fly;</span><br><span class="line"></span><br><span class="line">import java.awt.Graphics;</span><br><span class="line">import java.awt.Image;</span><br><span class="line">import java.awt.Rectangle;</span><br><span class="line"></span><br><span class="line">public class EnemyObj extends GameObj &#123;</span><br><span class="line"></span><br><span class="line">public EnemyObj() &#123;</span><br><span class="line">super();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public EnemyObj(Image img, int x, int y, int width, int height, double speed, GameWin frame) &#123;</span><br><span class="line">super(img, x, y, width, height, speed, frame);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">@Override</span><br><span class="line">public void paintSelf(Graphics gImage) &#123;</span><br><span class="line">super.paintSelf(gImage);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">@Override</span><br><span class="line">public Rectangle getRec() &#123;</span><br><span class="line">return super.getRec();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="工具类GameUtils中获取敌方的图片"><a href="#工具类GameUtils中获取敌方的图片" class="headerlink" title="工具类GameUtils中获取敌方的图片"></a>工具类GameUtils中获取敌方的图片</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">//GameUtils类</span><br><span class="line">//获取敌方战机的图片</span><br><span class="line">public static Image enemyImg = Toolkit.getDefaultToolkit().getImage(&quot;imgs/enemy.png&quot;);</span><br><span class="line"></span><br><span class="line">//定义敌机集合</span><br><span class="line">public static List&lt;EnemyObj&gt; enemyObjList = new ArrayList&lt;&gt;();</span><br></pre></td></tr></table></figure><h3 id="主窗口中创建敌方战机图片，创建多个，在createObj-方法中创建，每绘制10次，生成一架敌机"><a href="#主窗口中创建敌方战机图片，创建多个，在createObj-方法中创建，每绘制10次，生成一架敌机" class="headerlink" title="主窗口中创建敌方战机图片，创建多个，在createObj()方法中创建，每绘制10次，生成一架敌机"></a>主窗口中创建敌方战机图片，创建多个，在createObj()方法中创建，每绘制10次，生成一架敌机</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">public void createObj()&#123;</span><br><span class="line">if(count % 15 ==0)&#123;</span><br><span class="line">......</span><br><span class="line">&#125;</span><br><span class="line">if(count % 10 == 0)&#123;</span><br><span class="line">//生成敌机</span><br><span class="line">GameUtils.enemyObjList.add(new EnemyObj(GameUtils.enemyImg, (int)(Math.random()*550), (int)(Math.random()*100),49 , 36, 2, this));</span><br><span class="line">//添加到所有物体集合中</span><br><span class="line">GameUtils.gameObjList.add(GameUtils.enemyObjList.get(GameUtils.enemyObjList.size()-1));</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="敌机移动，需要重写EnemyObj中的paintSelf-方法"><a href="#敌机移动，需要重写EnemyObj中的paintSelf-方法" class="headerlink" title="敌机移动，需要重写EnemyObj中的paintSelf()方法"></a>敌机移动，需要重写EnemyObj中的paintSelf()方法</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">@Override</span><br><span class="line">public void paintSelf(Graphics gImage) &#123;</span><br><span class="line">super.paintSelf(gImage);</span><br><span class="line">//改变飞机y坐标</span><br><span class="line">y += speed ; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 飞机大战 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 飞机大战 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>07-我方战斗机子弹的添加</title>
      <link href="/2023/03/05/07-%E6%88%91%E6%96%B9%E6%88%98%E6%96%97%E6%9C%BA%E5%AD%90%E5%BC%B9%E7%9A%84%E6%B7%BB%E5%8A%A0/"/>
      <url>/2023/03/05/07-%E6%88%91%E6%96%B9%E6%88%98%E6%96%97%E6%9C%BA%E5%AD%90%E5%BC%B9%E7%9A%84%E6%B7%BB%E5%8A%A0/</url>
      
        <content type="html"><![CDATA[<h3 id="新建java类ShellObj-继承-GameObj类，重写方法"><a href="#新建java类ShellObj-继承-GameObj类，重写方法" class="headerlink" title="新建java类ShellObj 继承  GameObj类，重写方法"></a>新建java类ShellObj 继承  GameObj类，重写方法</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">public class ShellObj extends GameObj &#123;</span><br><span class="line"></span><br><span class="line">public ShellObj() &#123;</span><br><span class="line">super();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public ShellObj(Image img, int x, int y, int width, int height, double speed, GameWin frame) &#123;</span><br><span class="line">super(img, x, y, width, height, speed, frame);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">@Override</span><br><span class="line">public void paintSelf(Graphics gImage) &#123;</span><br><span class="line">super.paintSelf(gImage);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">@Override</span><br><span class="line">public Rectangle getRec() &#123;</span><br><span class="line">return super.getRec();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="在GameUtils工具类中，获取我方子弹的图片"><a href="#在GameUtils工具类中，获取我方子弹的图片" class="headerlink" title="在GameUtils工具类中，获取我方子弹的图片"></a>在GameUtils工具类中，获取我方子弹的图片</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">//GameUtils类</span><br><span class="line">//获取我方子弹的图片</span><br><span class="line">public static Image shell = Toolkit.getDefaultToolkit().getImage(&quot;imgs/shell.png&quot;);</span><br></pre></td></tr></table></figure><h3 id="在主窗口中创建我方子弹图片"><a href="#在主窗口中创建我方子弹图片" class="headerlink" title="在主窗口中创建我方子弹图片"></a>在主窗口中创建我方子弹图片</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">//GameWin类</span><br><span class="line"></span><br><span class="line">//创建我方子弹</span><br><span class="line">ShellObj shellObj = new ShellObj(GameUtils.shell, planeObj.x + 3, planeObj.y-16, 14, 29, 5, this);</span><br><span class="line"></span><br><span class="line">//paint()方法中调用子弹绘制自身的方法</span><br><span class="line">// 游戏开始,就可以在屏幕上产生子弹了</span><br><span class="line">if (state == 1) &#123;</span><br><span class="line">//背景图片向下移动</span><br><span class="line">bgObj.paintSelf(gImage);</span><br><span class="line">//绘制飞机</span><br><span class="line">planeObj.paintSelf(gImage);</span><br><span class="line">//绘制子弹</span><br><span class="line">shellObj.paintSelf(gImage);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="子弹移动，重写ShellObj的paintSelf-方法"><a href="#子弹移动，重写ShellObj的paintSelf-方法" class="headerlink" title="子弹移动，重写ShellObj的paintSelf() 方法"></a>子弹移动，重写ShellObj的paintSelf() 方法</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">@Override</span><br><span class="line">public void paintSelf(Graphics gImage) &#123;</span><br><span class="line">super.paintSelf(gImage);</span><br><span class="line">        //纵坐标减小</span><br><span class="line">y -= speed ; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="批量创建我方子弹"><a href="#批量创建我方子弹" class="headerlink" title="批量创建我方子弹"></a>批量创建我方子弹</h2><h3 id="在工具类中创建我方子弹的集合"><a href="#在工具类中创建我方子弹的集合" class="headerlink" title="在工具类中创建我方子弹的集合"></a>在工具类中创建我方子弹的集合</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">//GameUtils类</span><br><span class="line"></span><br><span class="line">//创建我方子弹的集合</span><br><span class="line">public static List&lt;ShellObj&gt; shellObjList = new ArrayList&lt;ShellObj&gt;();</span><br></pre></td></tr></table></figure><h3 id="创建存放所有物体的集合"><a href="#创建存放所有物体的集合" class="headerlink" title="创建存放所有物体的集合"></a>创建存放所有物体的集合</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">//GameUtils类</span><br><span class="line"></span><br><span class="line">//创建所有物体类的集合</span><br><span class="line">public static List&lt;GameObj&gt; gameObjList = new ArrayList&lt;GameObj&gt;();</span><br></pre></td></tr></table></figure><h3 id="在GameWin类中定义一个创建对象的方法，游戏只有在运行状态下才能创建，创建批量的，在while循环中调用"><a href="#在GameWin类中定义一个创建对象的方法，游戏只有在运行状态下才能创建，创建批量的，在while循环中调用" class="headerlink" title="在GameWin类中定义一个创建对象的方法，游戏只有在运行状态下才能创建，创建批量的，在while循环中调用"></a>在GameWin类中定义一个创建对象的方法，游戏只有在运行状态下才能创建，创建批量的，在while循环中调用</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">//GameWin类</span><br><span class="line"></span><br><span class="line">//注释掉创建我方子弹对象代码</span><br><span class="line">//ShellObj shellObj = new ShellObj(GameUtils.shell, planeObj.x + 3, planeObj.y-16, 14, 29, 5, this);</span><br><span class="line"></span><br><span class="line">//注释掉子弹重绘的方法</span><br><span class="line">//shellObj.paintSelf(gImage);</span><br><span class="line"></span><br><span class="line">//自定义创建对象的方法 createObject() ; </span><br><span class="line">public void createObject()&#123;</span><br><span class="line">    //实例化我方子弹，添加到集合中</span><br><span class="line">    GameUtils.shellObjList.add(new ShellObj(GameUtils.shell, planeObj.x + 3, planeObj.y-16, 14, 29, 5, this));</span><br><span class="line">    //获取我方子弹集合中最后一个对象，添加到所有物体集合中 。 </span><br><span class="line">  GameUtils.gameObjList.add(GameUtils.shellObjList.get(GameUtils.shellObjList.size()-1));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">//子弹需要批量产生 ，并且只有在游戏开始状态下才能产生对象</span><br><span class="line">.....</span><br><span class="line">    while(true)&#123;</span><br><span class="line">        if(state == 1)&#123;</span><br><span class="line">            //调用创建对象的方法</span><br><span class="line">            createObj(); </span><br><span class="line">            //重绘</span><br><span class="line">            repaint();</span><br><span class="line">        &#125;</span><br><span class="line">        try &#123;</span><br><span class="line">Thread.sleep(25);</span><br><span class="line">&#125; catch (Exception e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h3 id="GameWin类中新增变量count，统计绘制次数，利用绘制次数来设置子弹的初速"><a href="#GameWin类中新增变量count，统计绘制次数，利用绘制次数来设置子弹的初速" class="headerlink" title="GameWin类中新增变量count，统计绘制次数，利用绘制次数来设置子弹的初速"></a>GameWin类中新增变量count，统计绘制次数，利用绘制次数来设置子弹的初速</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">//GameWin类</span><br><span class="line">//定义绘制次数</span><br><span class="line">int count = 0 ; </span><br><span class="line"></span><br><span class="line">//在while循环中统计绘制的次数</span><br><span class="line">//背景图不断移动，需要调用paint()方法，所以在主窗口中，需要写一个循环</span><br><span class="line">while(true)&#123;</span><br><span class="line">//状态  </span><br><span class="line">if(state == 1)&#123;</span><br><span class="line">//开始状态下才创建对象。重绘也是一样的 。 </span><br><span class="line">createObj();</span><br><span class="line">//每间隔25毫秒调用一次 reapint() 方法</span><br><span class="line">repaint();</span><br><span class="line">&#125;</span><br><span class="line">try &#123;</span><br><span class="line">Thread.sleep(25);</span><br><span class="line">&#125; catch (Exception e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// 重写paint绘制方法</span><br><span class="line">@Override</span><br><span class="line">public void paint(Graphics g) &#123;</span><br><span class="line">......</span><br><span class="line">// 把新图片一次绘制到主窗口中</span><br><span class="line">g.drawImage(offScreenImage, 0, 0, null);</span><br><span class="line">// 绘制次数 +1</span><br><span class="line">count++;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">//修改createObj() 方法 ，控制子弹初速</span><br><span class="line">public void createObj()&#123;</span><br><span class="line">if(count % 15 ==0)&#123;</span><br><span class="line">//游戏只有在运行状态下才能产生对象,加上判断，在while循环中加上判断</span><br><span class="line">GameUtils.shellObjList.add(new ShellObj(GameUtils.shell, planeObj.x + 3, planeObj.y-16, 14, 29, 5, this));</span><br><span class="line">//获取ShellObjeList最后一个对象，放到所有的物体的集合对象中</span><br><span class="line">GameUtils.gameObjList.add(GameUtils.shellObjList.get(GameUtils.shellObjList.size()-1));</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="绘制背景和飞机的图片代码，也可以进行优化"><a href="#绘制背景和飞机的图片代码，也可以进行优化" class="headerlink" title="绘制背景和飞机的图片代码，也可以进行优化"></a>绘制背景和飞机的图片代码，也可以进行优化</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">//GameWin类中</span><br><span class="line">//在运行launch() 方法中，将所有背景对象和飞机对象添加到绘制所有物体集合中</span><br><span class="line">public void launch()&#123;</span><br><span class="line">    // 设置窗口标题</span><br><span class="line">this.setTitle(&quot;宜宾学院飞机大战&quot;);</span><br><span class="line"></span><br><span class="line">//添加背景和飞机</span><br><span class="line">GameUtils.gameObjList.add(bgObj);</span><br><span class="line">GameUtils.gameObjList.add(planeObj);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">//绘制方法</span><br><span class="line">public void paint(Graphics g)&#123;</span><br><span class="line">    if(state == 1)&#123;</span><br><span class="line">        //读取所有物体的集合，调用绘制自身方法</span><br><span class="line">        for (int i = 0; i &lt; GameUtils.gameObjList.size(); i++) &#123;</span><br><span class="line">GameUtils.gameObjList.get(i).paintSelf(gImage);</span><br><span class="line">&#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 飞机大战 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 飞机大战 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>06-添加我方战斗机并且跟随鼠标移动</title>
      <link href="/2023/03/05/06-%E6%B7%BB%E5%8A%A0%E6%88%91%E6%96%B9%E6%88%98%E6%96%97%E6%9C%BA%E5%B9%B6%E4%B8%94%E8%B7%9F%E9%9A%8F%E9%BC%A0%E6%A0%87%E7%A7%BB%E5%8A%A8/"/>
      <url>/2023/03/05/06-%E6%B7%BB%E5%8A%A0%E6%88%91%E6%96%B9%E6%88%98%E6%96%97%E6%9C%BA%E5%B9%B6%E4%B8%94%E8%B7%9F%E9%9A%8F%E9%BC%A0%E6%A0%87%E7%A7%BB%E5%8A%A8/</url>
      
        <content type="html"><![CDATA[<h3 id="新建类PlaneObj-继承GameObj，重写需要的方法"><a href="#新建类PlaneObj-继承GameObj，重写需要的方法" class="headerlink" title="新建类PlaneObj 继承GameObj，重写需要的方法"></a>新建类PlaneObj 继承GameObj，重写需要的方法</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">package com.demo.fly;</span><br><span class="line"></span><br><span class="line">import java.awt.Graphics;</span><br><span class="line">import java.awt.Image;</span><br><span class="line">import java.awt.Rectangle;</span><br><span class="line"></span><br><span class="line">public class PlaneObj extends GameObj &#123;</span><br><span class="line"></span><br><span class="line">public PlaneObj() &#123;</span><br><span class="line">super();</span><br><span class="line">// TODO Auto-generated constructor stub</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public PlaneObj(Image img, int x, int y, int width, int height, double speed, GameWin frame) &#123;</span><br><span class="line">super(img, x, y, width, height, speed, frame);</span><br><span class="line">// TODO Auto-generated constructor stub</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">@Override</span><br><span class="line">public Rectangle getRec() &#123;</span><br><span class="line">// TODO Auto-generated method stub</span><br><span class="line">return super.getRec();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">@Override</span><br><span class="line">public void paintSelf(Graphics gImage) &#123;</span><br><span class="line">// TODO Auto-generated method stub</span><br><span class="line">super.paintSelf(gImage);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="在工具类GameUtils中，获取我方战斗机图片"><a href="#在工具类GameUtils中，获取我方战斗机图片" class="headerlink" title="在工具类GameUtils中，获取我方战斗机图片"></a>在工具类GameUtils中，获取我方战斗机图片</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">//GameUtils类</span><br><span class="line">//获取我方战斗机图片</span><br><span class="line">public static Image planeImg = Toolkit.getDefaultToolkit().getImage(&quot;imgs/plane.png&quot;);</span><br></pre></td></tr></table></figure><h3 id="在GameWin主窗口中，实例化飞机对象，并且绘制到窗口图片上"><a href="#在GameWin主窗口中，实例化飞机对象，并且绘制到窗口图片上" class="headerlink" title="在GameWin主窗口中，实例化飞机对象，并且绘制到窗口图片上"></a>在GameWin主窗口中，实例化飞机对象，并且绘制到窗口图片上</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">//GameWin类</span><br><span class="line">BgObj bgObj = new BgObj(GameUtils.bgImg,0,-2000,2);</span><br><span class="line"></span><br><span class="line">//创建我方战斗机图片，图片，设置坐标，宽高，初始移动速度</span><br><span class="line">PlaneObj planeObj = new PlaneObj(GameUtils.planeImg, 280, 550, 22, 33, 0, this);</span><br><span class="line"></span><br><span class="line">//绘制到窗体上</span><br><span class="line">public void paint(Graphics g)&#123;</span><br><span class="line">    .....</span><br><span class="line">    else if(state == 1)&#123;</span><br><span class="line">        //背景图片向下移动</span><br><span class="line">bgObj.paintSelf(gImage);</span><br><span class="line">//绘制飞机</span><br><span class="line">planeObj.paintSelf(gImage);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="实现飞机跟随鼠标进行移动"><a href="#实现飞机跟随鼠标进行移动" class="headerlink" title="实现飞机跟随鼠标进行移动"></a>实现飞机跟随鼠标进行移动</h2><h3 id="在飞机的带参数的构造方法中，添加鼠标移动事件"><a href="#在飞机的带参数的构造方法中，添加鼠标移动事件" class="headerlink" title="在飞机的带参数的构造方法中，添加鼠标移动事件"></a>在飞机的带参数的构造方法中，添加鼠标移动事件</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">MouseListener：鼠标监听器</span><br><span class="line"> * mouseClicked()鼠标点击</span><br><span class="line">     * mousePressed()鼠标按下</span><br><span class="line">     * mouseReleased()鼠标松开</span><br><span class="line">     * mouseEntered()鼠标进入</span><br><span class="line">     * mouseExited()鼠标离开</span><br><span class="line">MouseMotionListener：鼠标监听器</span><br><span class="line"> * 对于鼠标的移动和拖放，另外用鼠标运动监听器MouseMotionListener</span><br><span class="line">     * 因为需要程序不需要监听鼠标运动，把两折分开简化程序</span><br><span class="line">     * 相应事件和处理方法</span><br><span class="line">     * mouseMove()鼠标移动</span><br><span class="line">     * mouseDrageged()鼠标被拖动</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">//PlaneObj类</span><br><span class="line"></span><br><span class="line">//带参数的构造方法中添加鼠标移动事件监听器</span><br><span class="line">public PlaneObj(Image img, int x, int y, int width, int height, double speed, GameWin frame) &#123;</span><br><span class="line">super(img, x, y, width, height, speed, frame);</span><br><span class="line">//添加鼠标移动事件 </span><br><span class="line">this.frame.addMouseMotionListener(new MouseAdapter() &#123;</span><br><span class="line">@Override</span><br><span class="line">public void mouseMoved(MouseEvent e) &#123;</span><br><span class="line">//改变飞机的x ，y</span><br><span class="line">PlaneObj.this.x= e.getX() - PlaneObj.this.width/2 ;</span><br><span class="line">PlaneObj.this.y= e.getY() - PlaneObj.this.height/2 ;</span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 飞机大战 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 飞机大战 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>05-实现背景图片的移动</title>
      <link href="/2023/03/05/05-%E5%AE%9E%E7%8E%B0%E8%83%8C%E6%99%AF%E5%9B%BE%E7%89%87%E7%9A%84%E7%A7%BB%E5%8A%A8/"/>
      <url>/2023/03/05/05-%E5%AE%9E%E7%8E%B0%E8%83%8C%E6%99%AF%E5%9B%BE%E7%89%87%E7%9A%84%E7%A7%BB%E5%8A%A8/</url>
      
        <content type="html"><![CDATA[<h2 id="如何实现背景的移动"><a href="#如何实现背景的移动" class="headerlink" title="如何实现背景的移动"></a>如何实现背景的移动</h2><h3 id="当背景图片不断向下移动的时候，会造成我们不断向上走的视觉效果"><a href="#当背景图片不断向下移动的时候，会造成我们不断向上走的视觉效果" class="headerlink" title="当背景图片不断向下移动的时候，会造成我们不断向上走的视觉效果"></a>当背景图片不断向下移动的时候，会造成我们不断向上走的视觉效果</h3><h4 id="新建实体类-BgObj-重写需要使用的方法"><a href="#新建实体类-BgObj-重写需要使用的方法" class="headerlink" title="新建实体类 BgObj,重写需要使用的方法"></a>新建实体类 BgObj,重写需要使用的方法</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.demo.fly;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.awt.Graphics;</span><br><span class="line"><span class="keyword">import</span> java.awt.Image;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">BgObj</span> <span class="keyword">extends</span> <span class="title class_">GameObj</span> &#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="title function_">BgObj</span><span class="params">()</span> &#123;</span><br><span class="line"><span class="built_in">super</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="title function_">BgObj</span><span class="params">(Image img, <span class="type">int</span> x, <span class="type">int</span> y, <span class="type">double</span> speed)</span> &#123;</span><br><span class="line"><span class="built_in">super</span>(img, x, y, speed);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//重写绘制自身的方法</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">paintSelf</span><span class="params">(Graphics gImage)</span> &#123;</span><br><span class="line"><span class="built_in">super</span>.paintSelf(gImage);</span><br><span class="line"><span class="comment">//背景图不断移动，需要调用paint()方法，所以在主窗口中，需要写一个循环</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="在GameWin主窗口中，创建一个背景类的对象"><a href="#在GameWin主窗口中，创建一个背景类的对象" class="headerlink" title="在GameWin主窗口中，创建一个背景类的对象"></a>在GameWin主窗口中，创建一个背景类的对象</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">static</span> <span class="type">int</span> <span class="variable">state</span> <span class="operator">=</span> <span class="number">0</span> ; </span><br><span class="line"><span class="comment">//背景图片对象 传入背景图坐标和移动速度</span></span><br><span class="line"><span class="comment">//y = -2000  为什么 ？ 纵坐标底部和窗口底部对齐，所以纵坐标为负值 </span></span><br><span class="line"><span class="type">BgObj</span> <span class="variable">bgObj</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BgObj</span>(GameUtils.bgImg, <span class="number">0</span>,-<span class="number">2000</span>,<span class="number">2</span>);</span><br></pre></td></tr></table></figure><h4 id="在paint-方法中，修改代码，当游戏处于运行状态的时候，背景图片一直要向下移动，行程向上走的效果，所以要不停的改变背景图片纵坐标y的位置"><a href="#在paint-方法中，修改代码，当游戏处于运行状态的时候，背景图片一直要向下移动，行程向上走的效果，所以要不停的改变背景图片纵坐标y的位置" class="headerlink" title="在paint()方法中，修改代码，当游戏处于运行状态的时候，背景图片一直要向下移动，行程向上走的效果，所以要不停的改变背景图片纵坐标y的位置"></a>在paint()方法中，修改代码，当游戏处于运行状态的时候，背景图片一直要向下移动，行程向上走的效果，所以要不停的改变背景图片纵坐标y的位置</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//GameWin类</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">paint</span><span class="params">(Graphics g)</span> &#123;</span><br><span class="line"><span class="comment">// 游戏未开始</span></span><br><span class="line"><span class="keyword">if</span> (state == <span class="number">0</span>) &#123;</span><br><span class="line">......</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 游戏开始</span></span><br><span class="line"><span class="keyword">if</span> (state == <span class="number">1</span>) &#123;</span><br><span class="line"><span class="comment">//调用背景图片绘制放在，在绘制方法中修改纵坐标位置</span></span><br><span class="line">bgObj.paintSelf(g);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="在BgObj类中修改paintSelf-Graphics-gImage-方法，修改纵坐标"><a href="#在BgObj类中修改paintSelf-Graphics-gImage-方法，修改纵坐标" class="headerlink" title="在BgObj类中修改paintSelf(Graphics gImage) 方法，修改纵坐标"></a>在BgObj类中修改paintSelf(Graphics gImage) 方法，修改纵坐标</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">//BgObj类</span><br><span class="line">@Override</span><br><span class="line">public void paintSelf(Graphics gImage) &#123;</span><br><span class="line">super.paintSelf(gImage);</span><br><span class="line">y+=speed; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="背景图不断移动，需要不停调用repaint-方法，所以在主窗口launch-运行方法中，需要写一个循环，每间隔25ms刷新一次界面。"><a href="#背景图不断移动，需要不停调用repaint-方法，所以在主窗口launch-运行方法中，需要写一个循环，每间隔25ms刷新一次界面。" class="headerlink" title="背景图不断移动，需要不停调用repaint()方法，所以在主窗口launch()运行方法中，需要写一个循环，每间隔25ms刷新一次界面。"></a>背景图不断移动，需要不停调用repaint()方法，所以在主窗口launch()运行方法中，需要写一个循环，每间隔25ms刷新一次界面。</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">//GameWin类</span><br><span class="line">// 添加鼠标点击事件</span><br><span class="line">this.addMouseListener(new MouseAdapter() &#123;</span><br><span class="line">            ......</span><br><span class="line">        &#125;</span><br><span class="line">        //背景图不断移动，需要调用paint()方法</span><br><span class="line">while(true)&#123;</span><br><span class="line">            repaint();</span><br><span class="line">try &#123;</span><br><span class="line">Thread.sleep(25);</span><br><span class="line">&#125; catch (Exception e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><h4 id="使用双缓存技术，解决启动页面图片闪动"><a href="#使用双缓存技术，解决启动页面图片闪动" class="headerlink" title="使用双缓存技术，解决启动页面图片闪动"></a>使用双缓存技术，解决启动页面图片闪动</h4><p>启动页面文字闪动，窗口中的元素都是绘制的 。每次重新绘制的时候，都是一个个绘制上去，使用缓存的方式来解决闪动问题.</p><p>使用缓存结束来解决闪动问题，大致思路是，绘制一张空的图片，把所有组件先绘制在空的图片上面，把绘制好的图片，一次性绘制到窗口中，称之为双缓存技术.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">//GameWin类中</span><br><span class="line"></span><br><span class="line">//定义一个空的图片 ，在paint() 方法中重新绘制 </span><br><span class="line">Image offScreenImage = null; </span><br><span class="line">//定义图片的宽高，和窗体的宽高保持一致，都是600 ， 600 </span><br><span class="line">static int width = 600 ; </span><br><span class="line">static int height = 600 ; </span><br><span class="line"></span><br><span class="line">//重写paint方法</span><br><span class="line">public void paint(Graphics g)&#123;</span><br><span class="line">    if(offScreenImage == null)&#123;</span><br><span class="line">        offScreenImage = createImage(width, height);</span><br><span class="line">    &#125;</span><br><span class="line">    //获取图片的画笔对象</span><br><span class="line">    Graphics gImage = offScreenImage.getGraphics();</span><br><span class="line">    //将所有直接绘制在窗体上的内容，改成绘制到图片上 。 </span><br><span class="line">    if(state == 0)&#123;</span><br><span class="line">        // 使用画笔绘制图片</span><br><span class="line">gImage.drawImage(GameUtils.bgImg, 0, 0, null);</span><br><span class="line">gImage.drawImage(GameUtils.bossImg, 220, 120, null);</span><br><span class="line">gImage.drawImage(GameUtils.explodeImg, 270, 350, null);</span><br><span class="line">// 添加文字</span><br><span class="line">gImage.setColor(Color.yellow);</span><br><span class="line">gImage.setFont(new Font(&quot;仿宋&quot;, Font.BOLD, 40));</span><br><span class="line">gImage.drawString(&quot;点击开始游戏&quot;, 180, 300);</span><br><span class="line">    &#125;else if(state == 1)&#123;</span><br><span class="line">        bgObj.paintSelf(gImage);</span><br><span class="line">    &#125;</span><br><span class="line">    //最后再把这个图片绘制到窗体上</span><br><span class="line">    g.drawImage(offScreenImage , 0 , 0, null);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="实现背景图片的循环移动，当移动到最下面的时候，上面变黑了，实现循环。"><a href="#实现背景图片的循环移动，当移动到最下面的时候，上面变黑了，实现循环。" class="headerlink" title="实现背景图片的循环移动，当移动到最下面的时候，上面变黑了，实现循环。"></a>实现背景图片的循环移动，当移动到最下面的时候，上面变黑了，实现循环。</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">//BgObj </span><br><span class="line">//当 y 大于等于 0 的时候，会出现黑屏现象，所以当 y&gt;=0 ，需要y变成初始值</span><br><span class="line">//重写绘制自身的方法</span><br><span class="line">@Override</span><br><span class="line">public void paintSelf(Graphics gImage) &#123;</span><br><span class="line">super.paintSelf(gImage);</span><br><span class="line">y+=speed; </span><br><span class="line">if(y &gt;= 0)&#123;</span><br><span class="line">y = -2000 ;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 飞机大战 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 飞机大战 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>04-编写游戏中物体的父类</title>
      <link href="/2023/03/05/04-%E7%BC%96%E5%86%99%E6%B8%B8%E6%88%8F%E4%B8%AD%E7%89%A9%E4%BD%93%E7%9A%84%E7%88%B6%E7%B1%BB/"/>
      <url>/2023/03/05/04-%E7%BC%96%E5%86%99%E6%B8%B8%E6%88%8F%E4%B8%AD%E7%89%A9%E4%BD%93%E7%9A%84%E7%88%B6%E7%B1%BB/</url>
      
        <content type="html"><![CDATA[<h2 id="编写游戏中物体的父类，找到各个物体的相同点-。"><a href="#编写游戏中物体的父类，找到各个物体的相同点-。" class="headerlink" title="编写游戏中物体的父类，找到各个物体的相同点 。"></a>编写游戏中物体的父类，找到各个物体的相同点 。</h2><h3 id="游戏中的每个物体，都有-图片，坐标，宽高，移动速度，同时这些图片都需要展示在窗体上，因此需要设置如下属性"><a href="#游戏中的每个物体，都有-图片，坐标，宽高，移动速度，同时这些图片都需要展示在窗体上，因此需要设置如下属性" class="headerlink" title="游戏中的每个物体，都有 图片，坐标，宽高，移动速度，同时这些图片都需要展示在窗体上，因此需要设置如下属性"></a>游戏中的每个物体，都有 图片，坐标，宽高，移动速度，同时这些图片都需要展示在窗体上，因此需要设置如下属性</h3><h3 id="同时每个图片都需要在窗体上展示，定义一个paintSelf-方法"><a href="#同时每个图片都需要在窗体上展示，定义一个paintSelf-方法" class="headerlink" title="同时每个图片都需要在窗体上展示，定义一个paintSelf() 方法"></a>同时每个图片都需要在窗体上展示，定义一个paintSelf() 方法</h3><h3 id="判断物体之间是否进行了碰撞，需要定义一个获取自身矩形的方法-getRec"><a href="#判断物体之间是否进行了碰撞，需要定义一个获取自身矩形的方法-getRec" class="headerlink" title="判断物体之间是否进行了碰撞，需要定义一个获取自身矩形的方法 getRec()"></a>判断物体之间是否进行了碰撞，需要定义一个获取自身矩形的方法 getRec()</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.demo.fly;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.awt.Graphics;</span><br><span class="line"><span class="keyword">import</span> java.awt.Image;</span><br><span class="line"><span class="keyword">import</span> java.awt.Rectangle;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 各个物体的父类</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">GameObj</span> &#123;</span><br><span class="line"><span class="comment">//图片</span></span><br><span class="line">Image  img;</span><br><span class="line"><span class="comment">//坐标</span></span><br><span class="line"><span class="type">int</span> x , y ; </span><br><span class="line"><span class="comment">//宽高</span></span><br><span class="line"><span class="type">int</span> width , height ; </span><br><span class="line"><span class="comment">//初速</span></span><br><span class="line"><span class="type">double</span> speed ; </span><br><span class="line"><span class="comment">//窗口的引用</span></span><br><span class="line">GameWin frame ;</span><br><span class="line"><span class="keyword">public</span> Image <span class="title function_">getImg</span><span class="params">()</span> &#123;</span><br><span class="line"><span class="keyword">return</span> img;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setImg</span><span class="params">(Image img)</span> &#123;</span><br><span class="line"><span class="built_in">this</span>.img = img;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getX</span><span class="params">()</span> &#123;</span><br><span class="line"><span class="keyword">return</span> x;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setX</span><span class="params">(<span class="type">int</span> x)</span> &#123;</span><br><span class="line"><span class="built_in">this</span>.x = x;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getY</span><span class="params">()</span> &#123;</span><br><span class="line"><span class="keyword">return</span> y;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setY</span><span class="params">(<span class="type">int</span> y)</span> &#123;</span><br><span class="line"><span class="built_in">this</span>.y = y;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getWidth</span><span class="params">()</span> &#123;</span><br><span class="line"><span class="keyword">return</span> width;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setWidth</span><span class="params">(<span class="type">int</span> width)</span> &#123;</span><br><span class="line"><span class="built_in">this</span>.width = width;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getHeight</span><span class="params">()</span> &#123;</span><br><span class="line"><span class="keyword">return</span> height;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setHeight</span><span class="params">(<span class="type">int</span> height)</span> &#123;</span><br><span class="line"><span class="built_in">this</span>.height = height;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="type">double</span> <span class="title function_">getSpeed</span><span class="params">()</span> &#123;</span><br><span class="line"><span class="keyword">return</span> speed;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setSpeed</span><span class="params">(<span class="type">double</span> speed)</span> &#123;</span><br><span class="line"><span class="built_in">this</span>.speed = speed;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> GameWin <span class="title function_">getFrame</span><span class="params">()</span> &#123;</span><br><span class="line"><span class="keyword">return</span> frame;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setFrame</span><span class="params">(GameWin frame)</span> &#123;</span><br><span class="line"><span class="built_in">this</span>.frame = frame;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="title function_">GameObj</span><span class="params">(Image img, <span class="type">int</span> x, <span class="type">int</span> y, <span class="type">int</span> width, <span class="type">int</span> height, <span class="type">double</span> speed, GameWin frame)</span> &#123;</span><br><span class="line"><span class="built_in">super</span>();</span><br><span class="line"><span class="built_in">this</span>.img = img;</span><br><span class="line"><span class="built_in">this</span>.x = x;</span><br><span class="line"><span class="built_in">this</span>.y = y;</span><br><span class="line"><span class="built_in">this</span>.width = width;</span><br><span class="line"><span class="built_in">this</span>.height = height;</span><br><span class="line"><span class="built_in">this</span>.speed = speed;</span><br><span class="line"><span class="built_in">this</span>.frame = frame;</span><br><span class="line">&#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">GameObj</span><span class="params">(Image img, <span class="type">int</span> x, <span class="type">int</span> y, <span class="type">double</span> speed)</span> &#123;</span><br><span class="line"><span class="built_in">super</span>();</span><br><span class="line"><span class="built_in">this</span>.img = img;</span><br><span class="line"><span class="built_in">this</span>.x = x;</span><br><span class="line"><span class="built_in">this</span>.y = y;</span><br><span class="line"><span class="built_in">this</span>.speed = speed;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="title function_">GameObj</span><span class="params">()</span> &#123;</span><br><span class="line"><span class="built_in">super</span>();</span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="comment">//绘制自身的方法 。 </span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">paintSelf</span><span class="params">(Graphics gImage)</span>&#123;</span><br><span class="line">gImage.drawImage(img, x, y, <span class="literal">null</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//获取自身矩形的方法 。 </span></span><br><span class="line"><span class="keyword">public</span> Rectangle <span class="title function_">getRec</span><span class="params">()</span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Rectangle</span>(x, y, width, height);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 飞机大战 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 飞机大战 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>03-启动页面点击事件</title>
      <link href="/2023/03/05/03-%E5%90%AF%E5%8A%A8%E9%A1%B5%E9%9D%A2%E7%82%B9%E5%87%BB%E4%BA%8B%E4%BB%B6/"/>
      <url>/2023/03/05/03-%E5%90%AF%E5%8A%A8%E9%A1%B5%E9%9D%A2%E7%82%B9%E5%87%BB%E4%BA%8B%E4%BB%B6/</url>
      
        <content type="html"><![CDATA[<h2 id="启动页面点击事件-游戏启动功能"><a href="#启动页面点击事件-游戏启动功能" class="headerlink" title="启动页面点击事件-游戏启动功能"></a>启动页面点击事件-游戏启动功能</h2><h3 id="启动页面在游戏未开始的时候显示，此时游戏的状态为-0-，当鼠标点击游戏界面后，进入启动状态，状态码-变为1-，背景图片消失，在GameWin类launch-方法中添加鼠标单击事件"><a href="#启动页面在游戏未开始的时候显示，此时游戏的状态为-0-，当鼠标点击游戏界面后，进入启动状态，状态码-变为1-，背景图片消失，在GameWin类launch-方法中添加鼠标单击事件" class="headerlink" title="启动页面在游戏未开始的时候显示，此时游戏的状态为 0 ，当鼠标点击游戏界面后，进入启动状态，状态码 变为1 ，背景图片消失，在GameWin类launch()方法中添加鼠标单击事件"></a>启动页面在游戏未开始的时候显示，此时游戏的状态为 0 ，当鼠标点击游戏界面后，进入启动状态，状态码 变为1 ，背景图片消失，在GameWin类launch()方法中添加鼠标单击事件</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//GameWin 类 </span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">launch</span><span class="params">()</span>&#123;</span><br><span class="line">    ......</span><br><span class="line">    <span class="built_in">this</span>.setTitle(<span class="string">&quot;飞机大战&quot;</span>);</span><br><span class="line">    <span class="comment">//添加鼠标点击事件 </span></span><br><span class="line"><span class="built_in">this</span>.addMouseListener(<span class="keyword">new</span> <span class="title class_">MouseAdapter</span>() &#123;</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">mouseClicked</span><span class="params">(MouseEvent e)</span> &#123;</span><br><span class="line">        <span class="comment">//鼠标左键 1 , 右键 3 ，滚轴 2</span></span><br><span class="line">System.out.println(<span class="string">&quot;e.getButton() == &quot;</span> + e.getButton());</span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//GameWin类</span></span><br><span class="line"><span class="comment">// 添加鼠标点击事件</span></span><br><span class="line"><span class="built_in">this</span>.addMouseListener(<span class="keyword">new</span> <span class="title class_">MouseAdapter</span>() &#123;</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">mouseClicked</span><span class="params">(MouseEvent e)</span> &#123;</span><br><span class="line"><span class="comment">// 当游戏未开始，并且点击鼠标左键，才能够运行</span></span><br><span class="line"><span class="keyword">if</span> (e.getButton() == <span class="number">1</span> &amp;&amp; state == <span class="number">0</span>) &#123;</span><br><span class="line"><span class="comment">// 更改游戏状态</span></span><br><span class="line">state = <span class="number">1</span>;</span><br><span class="line"><span class="comment">// 调用reapint() 方法，会重新调用paint()方法,改变了显示的文字</span></span><br><span class="line">                    repaint();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">paint</span><span class="params">(Graphics g)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(state == <span class="number">0</span>)&#123;</span><br><span class="line">            ......</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(state == <span class="number">1</span>)&#123;</span><br><span class="line">            <span class="comment">// 使用画笔绘制图片</span></span><br><span class="line">g.drawImage(GameUtils.bgImg, <span class="number">0</span>, <span class="number">0</span>, <span class="literal">null</span>);</span><br><span class="line">g.drawImage(GameUtils.bossImg, <span class="number">220</span>, <span class="number">120</span>, <span class="literal">null</span>);</span><br><span class="line">g.drawImage(GameUtils.explodeImg, <span class="number">270</span>, <span class="number">350</span>, <span class="literal">null</span>);</span><br><span class="line"><span class="comment">// 添加文字</span></span><br><span class="line">g.setColor(Color.yellow);</span><br><span class="line">g.setFont(<span class="keyword">new</span> <span class="title class_">Font</span>(<span class="string">&quot;仿宋&quot;</span>, Font.BOLD, <span class="number">40</span>));</span><br><span class="line">g.drawString(<span class="string">&quot;开始游戏了&quot;</span>, <span class="number">180</span>, <span class="number">300</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 飞机大战 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 飞机大战 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>02-绘制游戏启动界面</title>
      <link href="/2023/03/05/02-%E7%BB%98%E5%88%B6%E6%B8%B8%E6%88%8F%E5%90%AF%E5%8A%A8%E7%95%8C%E9%9D%A2/"/>
      <url>/2023/03/05/02-%E7%BB%98%E5%88%B6%E6%B8%B8%E6%88%8F%E5%90%AF%E5%8A%A8%E7%95%8C%E9%9D%A2/</url>
      
        <content type="html"><![CDATA[<h2 id="绘制启动页面制作"><a href="#绘制启动页面制作" class="headerlink" title="绘制启动页面制作"></a>绘制启动页面制作</h2><h3 id="游戏状态-0-未开始，1-游戏中-，2-暂停-，3通关失败，4通关成功"><a href="#游戏状态-0-未开始，1-游戏中-，2-暂停-，3通关失败，4通关成功" class="headerlink" title="游戏状态 0 未开始，1 游戏中 ，2 暂停 ，3通关失败，4通关成功"></a>游戏状态 0 未开始，1 游戏中 ，2 暂停 ，3通关失败，4通关成功</h3><h3 id="绘制首页：在GameUtils中添加两张图片，boss图片和爆炸图片"><a href="#绘制首页：在GameUtils中添加两张图片，boss图片和爆炸图片" class="headerlink" title="绘制首页：在GameUtils中添加两张图片，boss图片和爆炸图片"></a>绘制首页：在GameUtils中添加两张图片，boss图片和爆炸图片</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">/GameUtils类</span><br><span class="line">//获取敌方boss的图片</span><br><span class="line">public static Image bossImg = Toolkit.getDefaultToolkit().getImage(&quot;imgs/boss.jpg&quot;);</span><br><span class="line"></span><br><span class="line">//获取爆炸图片</span><br><span class="line">public static Image explodeImg = Toolkit.getDefaultToolkit().getImage(&quot;imgs/explode/e6.gif&quot;);</span><br></pre></td></tr></table></figure><h3 id="在GameWin类中修改paint-方法，添加游戏状态的判断，当游戏未开始的时候，才能显示背景图片以及文字"><a href="#在GameWin类中修改paint-方法，添加游戏状态的判断，当游戏未开始的时候，才能显示背景图片以及文字" class="headerlink" title="在GameWin类中修改paint()方法，添加游戏状态的判断，当游戏未开始的时候，才能显示背景图片以及文字"></a>在GameWin类中修改paint()方法，添加游戏状态的判断，当游戏未开始的时候，才能显示背景图片以及文字</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">//GameWin类</span><br><span class="line">int state = 0 ; </span><br><span class="line">//重写paint绘制方法</span><br><span class="line">@Override</span><br><span class="line">public void paint(Graphics g) &#123;</span><br><span class="line">//游戏未开始</span><br><span class="line">if(state == 0)&#123;</span><br><span class="line">//使用画笔绘制图片</span><br><span class="line">g.drawImage(GameUtils.bgImg, 0, 0, null);</span><br><span class="line">g.drawImage(GameUtils.bossImg, 200, 120, null);</span><br><span class="line">g.drawImage(GameUtils.explodeImg, 270, 350, null);</span><br><span class="line">//添加文字</span><br><span class="line">g.setColor(Color.yellow);</span><br><span class="line">g.setFont(new Font(&quot;仿宋&quot;,Font.BOLD, 40));</span><br><span class="line">g.drawString(&quot;点击开始游戏&quot;, 180, 300);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 飞机大战 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 飞机大战 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>01-绘制游戏窗口</title>
      <link href="/2023/03/05/01-%E7%BB%98%E5%88%B6%E6%B8%B8%E6%88%8F%E7%AA%97%E5%8F%A3/"/>
      <url>/2023/03/05/01-%E7%BB%98%E5%88%B6%E6%B8%B8%E6%88%8F%E7%AA%97%E5%8F%A3/</url>
      
        <content type="html"><![CDATA[<h2 id="绘制游戏窗口，新建一个GameWin类，继承JFrame类"><a href="#绘制游戏窗口，新建一个GameWin类，继承JFrame类" class="headerlink" title="绘制游戏窗口，新建一个GameWin类，继承JFrame类"></a>绘制游戏窗口，新建一个GameWin类，继承JFrame类</h2><p>Jframe: java的GUI程序的基本思路是以JFrame为基础，它是屏幕上window的对象，能够最大化、最小化、关闭。普通类集成了JFrame类，便具有了创建窗口的功能。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">GameWin</span> <span class="keyword">extends</span> <span class="title class_">JFrame</span> &#123;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 运行方法</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">launch</span><span class="params">()</span>&#123;</span><br><span class="line"><span class="comment">//设置窗口是否可见</span></span><br><span class="line"><span class="built_in">this</span>.setVisible(<span class="literal">true</span>);</span><br><span class="line"><span class="comment">//设置窗口的大小</span></span><br><span class="line"><span class="built_in">this</span>.setSize(<span class="number">600</span>,<span class="number">600</span>);</span><br><span class="line"><span class="comment">//设置窗口的位置  居中显示</span></span><br><span class="line"><span class="built_in">this</span>.setLocationRelativeTo(<span class="literal">null</span>);</span><br><span class="line">        <span class="comment">//设置窗体退出模式，点击右上角关闭，退出程序</span></span><br><span class="line"><span class="built_in">this</span>.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);</span><br><span class="line"><span class="comment">//设置窗口标题</span></span><br><span class="line"><span class="built_in">this</span>.setTitle(<span class="string">&quot;飞机大战&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line"><span class="type">GameWin</span> <span class="variable">gameWin</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">GameWin</span>() ; </span><br><span class="line">gameWin.launch();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="为窗体添加背景图片"><a href="#为窗体添加背景图片" class="headerlink" title="为窗体添加背景图片"></a>为窗体添加背景图片</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//新建java工具类，GameUtils，在GameUtils类中获取背景图片</span></span><br><span class="line">   <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 工具类</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@author</span> Administrator</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">GameUtils</span> &#123;</span><br><span class="line">       <span class="comment">//获取背景图片</span></span><br><span class="line">       <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">Image</span> <span class="variable">bgImg</span> <span class="operator">=</span> Toolkit.getDefaultToolkit().getImage(<span class="string">&quot;imgs/bg.jpg&quot;</span>);</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//在GameWin类中重写paint方法</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">paint</span><span class="params">(Graphics g)</span> &#123;</span><br><span class="line"><span class="comment">//使用画笔绘制图片</span></span><br><span class="line">g.drawImage(GameUtils.bgImg, <span class="number">0</span>, <span class="number">0</span>, <span class="literal">null</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 飞机大战 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 飞机大战 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>飞机大战</title>
      <link href="/2023/03/05/%E9%A3%9E%E6%9C%BA%E5%A4%A7%E6%88%98/"/>
      <url>/2023/03/05/%E9%A3%9E%E6%9C%BA%E5%A4%A7%E6%88%98/</url>
      
        <content type="html"><![CDATA[<h2 id="飞机大战"><a href="#飞机大战" class="headerlink" title="飞机大战"></a>飞机大战</h2><h3 id="项目功能介绍"><a href="#项目功能介绍" class="headerlink" title="项目功能介绍"></a>项目功能介绍</h3><ol><li>窗体绘制</li><li>图片与文字的绘制</li><li>背景图片的循环移动</li><li>鼠标控制飞机的移动位置</li><li>子弹的批量生成</li><li>敌机在随机位置批量生成 </li><li>子弹和飞机的碰撞检测</li><li>爆炸动画效果的实现</li><li>计分面板的实现 </li><li>游戏的暂停功能 </li><li>游戏的通关设置</li><li>血条的绘制</li><li>双缓存解决画面的闪动问题</li><li>集合的优化和使用</li></ol>]]></content>
      
      
      <categories>
          
          <category> 飞机大战 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 飞机大战 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>我的第一篇博客文章</title>
      <link href="/2023/02/22/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2/"/>
      <url>/2023/02/22/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2/</url>
      
        <content type="html"><![CDATA[<h2 id="第一章"><a href="#第一章" class="headerlink" title="第一章"></a>第一章</h2><p>内容</p><p>————</p><h2 id="第二章"><a href="#第二章" class="headerlink" title="第二章"></a>第二章</h2><p>内容</p><p>————</p><h2 id="第三章"><a href="#第三章" class="headerlink" title="第三章"></a>第三章</h2><p>内容</p><p>————</p><p>–INSERT–</p>]]></content>
      
      
      <categories>
          
          <category> 测试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 测试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2023/02/21/hello-world/"/>
      <url>/2023/02/21/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      <categories>
          
          <category> hello world </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hello world </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
